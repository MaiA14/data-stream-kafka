version: '2'
networks:
  app-tier:
    driver: bridge

services:
  zookeeper:
    container_name: zookeeper
    image: 'wurstmeister/zookeeper'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-tier
  kafka:
    container_name: kafka
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_DELETE_TOPIC_ENABLE=true
      - KAFKA_CFG_CREATE_TOPICS="${TOPIC}:1:1"
      - KAFKA_CFG_OFFSETS_TOPIC_NUM_PARTITIONS=2
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - app-tier
  jeeng:
    container_name: server
    image: 'jeeng'
    ports:
      - "4000:4000"
    networks:
      - app-tier
    build:
      context: ./server/
    environment:
      - TOPIC=${TOPIC}
      - MAIN_SERVER_PORT=${MAIN_SERVER_PORT}
    volumes:
      - ./server:/usr/src/jeeng/server
  middleware:
   container_name: middleware
   image: 'middleware'
   ports:
     - "6000:6000"
     - "3000:3000"
   networks:
      - app-tier
   environment:
      - TOPIC=${TOPIC}
      - SOCKET_PORT=${SOCKET_PORT}
   build:
      context: ./middleware/
   volumes:
      - ./middleware:/usr/src/jeeng/middleware
  client:
   depends_on:  
    - middleware
   container_name: client
   image: 'client'
   ports:
     - "8080:80"
   networks:
     - app-tier
   environment:
     - TOPIC=${TOPIC}
     - MAIN_SERVER_PORT=${MAIN_SERVER_PORT}
     - SOCKET_PORT=${SOCKET_PORT}
   build:
      context: ./client/
   volumes:
     - ./client:/usr/src/jeeng/client